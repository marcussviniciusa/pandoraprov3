"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_models_whatsapp_ts";
exports.ids = ["_rsc_src_models_whatsapp_ts"];
exports.modules = {

/***/ "(rsc)/./src/models/whatsapp.ts":
/*!********************************!*\
  !*** ./src/models/whatsapp.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BotConfig: () => (/* binding */ BotConfig),\n/* harmony export */   ChatWhatsApp: () => (/* binding */ ChatWhatsApp),\n/* harmony export */   MessageTemplate: () => (/* binding */ MessageTemplate),\n/* harmony export */   MessageWhatsApp: () => (/* binding */ MessageWhatsApp),\n/* harmony export */   WhatsAppInstance: () => (/* binding */ WhatsAppInstance)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst ChatWhatsAppSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    instanceId: {\n        type: String,\n        required: true,\n        index: true\n    },\n    clienteId: {\n        type: String,\n        index: true\n    },\n    contactJid: {\n        type: String,\n        required: true,\n        index: true\n    },\n    contactName: {\n        type: String,\n        required: true\n    },\n    contactProfilePicture: String,\n    lastMessage: String,\n    lastMessageTimestamp: Date,\n    unreadCount: {\n        type: Number,\n        default: 0\n    },\n    isGroup: {\n        type: Boolean,\n        default: false\n    }\n}, {\n    timestamps: true,\n    collection: 'whatsapp_chats'\n});\n// √çndices compostos\nChatWhatsAppSchema.index({\n    instanceId: 1,\n    contactJid: 1\n}, {\n    unique: true\n});\nChatWhatsAppSchema.index({\n    instanceId: 1,\n    clienteId: 1\n});\nChatWhatsAppSchema.index({\n    instanceId: 1,\n    lastMessageTimestamp: -1\n});\nconst MessageWhatsAppSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    chatId: {\n        type: String,\n        required: true,\n        index: true\n    },\n    messageId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    remoteJid: {\n        type: String,\n        required: true,\n        index: true\n    },\n    fromMe: {\n        type: Boolean,\n        required: true\n    },\n    content: {\n        type: String,\n        required: true\n    },\n    messageType: {\n        type: String,\n        required: true,\n        enum: [\n            'conversation',\n            'extendedTextMessage',\n            'imageMessage',\n            'documentMessage',\n            'audioMessage',\n            'videoMessage'\n        ]\n    },\n    timestamp: {\n        type: Date,\n        required: true,\n        index: true\n    },\n    status: {\n        type: String,\n        required: true,\n        enum: [\n            'sent',\n            'delivered',\n            'read',\n            'error'\n        ],\n        default: 'sent'\n    },\n    mediaUrl: String,\n    fileName: String,\n    caption: String,\n    quotedMessageId: String,\n    tenantId: {\n        type: String,\n        required: true,\n        index: true\n    }\n}, {\n    timestamps: true,\n    collection: 'whatsapp_messages'\n});\n// √çndices compostos\nMessageWhatsAppSchema.index({\n    chatId: 1,\n    timestamp: -1\n});\nMessageWhatsAppSchema.index({\n    tenantId: 1,\n    timestamp: -1\n});\nMessageWhatsAppSchema.index({\n    remoteJid: 1,\n    timestamp: -1\n});\nconst MessageTemplateSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    name: {\n        type: String,\n        required: true,\n        trim: true\n    },\n    category: {\n        type: String,\n        required: true,\n        enum: [\n            'boas-vindas',\n            'documentacao',\n            'status',\n            'agendamento',\n            'cobranca',\n            'geral'\n        ]\n    },\n    content: {\n        type: String,\n        required: true\n    },\n    variables: [\n        {\n            type: String,\n            trim: true\n        }\n    ],\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    tenantId: {\n        type: String,\n        required: true,\n        index: true\n    }\n}, {\n    timestamps: true,\n    collection: 'message_templates'\n});\nMessageTemplateSchema.index({\n    tenantId: 1,\n    category: 1\n});\nMessageTemplateSchema.index({\n    tenantId: 1,\n    name: 1\n}, {\n    unique: true\n});\nconst MenuOptionSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    id: String,\n    keyword: {\n        type: String,\n        required: true\n    },\n    title: {\n        type: String,\n        required: true\n    },\n    description: String,\n    response: {\n        type: String,\n        required: true\n    },\n    subOptions: {\n        type: [\n            mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema.Types.Mixed\n        ],\n        default: []\n    },\n    action: {\n        type: String,\n        enum: [\n            'send_message',\n            'transfer_human',\n            'collect_info',\n            'send_document'\n        ]\n    }\n}, {\n    _id: false\n});\nconst BotConfigSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    instanceId: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    welcomeMessage: String,\n    menuOptions: [\n        MenuOptionSchema\n    ],\n    fallbackMessage: {\n        type: String,\n        default: 'Desculpe, n√£o entendi sua mensagem. Digite *menu* para ver as op√ß√µes dispon√≠veis.'\n    },\n    businessHours: {\n        enabled: {\n            type: Boolean,\n            default: false\n        },\n        start: {\n            type: String,\n            default: '08:00'\n        },\n        end: {\n            type: String,\n            default: '18:00'\n        },\n        timezone: {\n            type: String,\n            default: 'America/Sao_Paulo'\n        },\n        offlineMessage: {\n            type: String,\n            default: 'üïí Nosso hor√°rio de atendimento √© de segunda √† sexta, das 8h √†s 18h. Retornaremos em breve!'\n        }\n    },\n    tenantId: {\n        type: String,\n        required: true,\n        index: true\n    }\n}, {\n    timestamps: true,\n    collection: 'bot_configs'\n});\nconst WhatsAppInstanceSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    instanceName: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    tenantId: {\n        type: String,\n        required: true,\n        index: true\n    },\n    status: {\n        type: String,\n        required: true,\n        enum: [\n            'connected',\n            'connecting',\n            'disconnected',\n            'qr_code'\n        ],\n        default: 'disconnected'\n    },\n    qrCode: String,\n    number: String,\n    profileName: String,\n    profilePictureUrl: String,\n    lastSeen: Date,\n    webhookConfigured: {\n        type: Boolean,\n        default: false\n    },\n    isActive: {\n        type: Boolean,\n        default: true\n    },\n    connectionAttempts: {\n        type: Number,\n        default: 0\n    },\n    lastConnectionAttempt: Date\n}, {\n    timestamps: true,\n    collection: 'whatsapp_instances'\n});\nWhatsAppInstanceSchema.index({\n    tenantId: 1,\n    status: 1\n});\n// ===== M√âTODOS EST√ÅTICOS E DE INST√ÇNCIA =====\n// M√©todos para Chat\nChatWhatsAppSchema.statics.findByInstance = function(instanceId) {\n    return this.find({\n        instanceId\n    }).sort({\n        lastMessageTimestamp: -1\n    });\n};\nChatWhatsAppSchema.statics.findByCliente = function(clienteId) {\n    return this.find({\n        clienteId\n    }).sort({\n        lastMessageTimestamp: -1\n    });\n};\nChatWhatsAppSchema.methods.updateLastMessage = function(content, timestamp) {\n    this.lastMessage = content;\n    this.lastMessageTimestamp = timestamp;\n    return this.save();\n};\nChatWhatsAppSchema.methods.incrementUnread = function() {\n    this.unreadCount += 1;\n    return this.save();\n};\nChatWhatsAppSchema.methods.markAsRead = function() {\n    this.unreadCount = 0;\n    return this.save();\n};\n// M√©todos para Message\nMessageWhatsAppSchema.statics.findByChat = function(chatId, limit = 50) {\n    return this.find({\n        chatId\n    }).sort({\n        timestamp: -1\n    }).limit(limit);\n};\nMessageWhatsAppSchema.statics.findByTenant = function(tenantId, limit = 100) {\n    return this.find({\n        tenantId\n    }).sort({\n        timestamp: -1\n    }).limit(limit);\n};\nMessageWhatsAppSchema.statics.countUnreadByTenant = function(tenantId) {\n    return this.aggregate([\n        {\n            $match: {\n                tenantId,\n                fromMe: false,\n                status: {\n                    $ne: 'read'\n                }\n            }\n        },\n        {\n            $group: {\n                _id: null,\n                count: {\n                    $sum: 1\n                }\n            }\n        }\n    ]);\n};\n// M√©todos para Template\nMessageTemplateSchema.statics.findByCategory = function(tenantId, category) {\n    return this.find({\n        tenantId,\n        category,\n        isActive: true\n    });\n};\nMessageTemplateSchema.methods.interpolate = function(variables) {\n    let content = this.content;\n    for (const [key, value] of Object.entries(variables)){\n        content = content.replace(new RegExp(`{{${key}}}`, 'g'), value);\n    }\n    return content;\n};\n// M√©todos para Instance\nWhatsAppInstanceSchema.statics.findByTenant = function(tenantId) {\n    return this.find({\n        tenantId,\n        isActive: true\n    });\n};\nWhatsAppInstanceSchema.statics.findConnected = function(tenantId) {\n    return this.find({\n        tenantId,\n        status: 'connected',\n        isActive: true\n    });\n};\nWhatsAppInstanceSchema.methods.updateStatus = function(status, additionalData) {\n    this.status = status;\n    this.lastSeen = new Date();\n    if (additionalData) {\n        Object.assign(this, additionalData);\n    }\n    return this.save();\n};\nWhatsAppInstanceSchema.methods.incrementConnectionAttempts = function() {\n    this.connectionAttempts += 1;\n    this.lastConnectionAttempt = new Date();\n    return this.save();\n};\nWhatsAppInstanceSchema.methods.resetConnectionAttempts = function() {\n    this.connectionAttempts = 0;\n    this.lastConnectionAttempt = undefined;\n    return this.save();\n};\n// ===== EXPORTA√á√ÉO DOS MODELOS =====\nconst ChatWhatsApp = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models)?.ChatWhatsApp || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('ChatWhatsApp', ChatWhatsAppSchema);\nconst MessageWhatsApp = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models)?.MessageWhatsApp || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('MessageWhatsApp', MessageWhatsAppSchema);\nconst MessageTemplate = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models)?.MessageTemplate || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('MessageTemplate', MessageTemplateSchema);\nconst BotConfig = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models)?.BotConfig || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('BotConfig', BotConfigSchema);\nconst WhatsAppInstance = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models)?.WhatsAppInstance || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model('WhatsAppInstance', WhatsAppInstanceSchema);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/models/whatsapp.ts\n");

/***/ })

};
;